#include <stdio.h> #include <string.h>

#define MAX 100 struct SymbolTable {
char identifier[50]; char type[20];
int address;
} table[MAX];


int count = 0;


void insert(char *id, char *type, int addr) { strcpy(table[count].identifier, id); strcpy(table[count].type, type); table[count].address = addr;
count++;
printf("Inserted: %s, Type: %s, Address: %d\n", id, type, addr);
}


void search(char *id) {
for (int i = 0; i < count; i++) {
if (strcmp(table[i].identifier, id) == 0) {
printf("Found: %s, Type: %s, Address: %d\n", table[i].identifier, table[i].type, table[i].address); return;
}
}
 
printf("Identifier not found.\n");
}


void display() { printf("\nSymbol Table:\n");
printf("Identifier\tType\tAddress\n"); for (int i = 0; i < count; i++) {
printf("%s\t\t%s\t%d\n", table[i].identifier, table[i].type, table[i].address);
}
}


int main() { int choice;
char id[50], type[20];
int address = 1000; // Initial memory address


while (1) {
printf("\n1. Insert\n2. Search\n3. Display\n4. Exit\nEnter choice: "); scanf("%d", &choice);

switch (choice) { case 1:
printf("Enter identifier and type: "); scanf("%s %s", id, type);
insert(id, type, address++); break;
case 2:
printf("Enter identifier to search: "); scanf("%s", id);
search(id); break;
 
case 3:
display(); break;
case 4:
return 0;
}
}
}
